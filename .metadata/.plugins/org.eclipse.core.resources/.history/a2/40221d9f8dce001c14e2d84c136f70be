package com.lms.accesslibrary.entity.library.book;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.springframework.format.annotation.DateTimeFormat;

import com.lms.accesslibrary.bo.BookLending;
import com.lms.accesslibrary.entity.library.BaseEntity;
import com.lms.accesslibrary.entity.library.user.User;
import com.lms.accesslibrary.enums.BookStatus;

@Entity
@Table(name="bookitem")
public class BookItem extends BaseEntity {	
	
	private Long id;
    private String trackingNumber;	
	private Date borrowedDate;
	private Date dueDate;
	private String status;
	private Date checkinDate;
	private BigDecimal price;
	private int active;	
    private User user;
	
	@Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name="id")
	public Long getId() {
		return id;
	}
	public void setId(Long id) {
		this.id = id;
	}
	
	@Column(name="tracking_number", nullable = false)
	public String getTrackingNumber() {
		return trackingNumber;
	}
	public void setTrackingNumber(String trackingNumber) {
		this.trackingNumber = trackingNumber;
	}
	
	@Column(name = "borrowed_date", nullable = false)
    @DateTimeFormat
	public Date getBorrowedDate() {
		return borrowedDate;
	}
	public void setBorrowedDate(Date borrowedDate) {
		this.borrowedDate = borrowedDate;
	}
	
	@Column(name = "due_date", nullable = false)
    @DateTimeFormat
	public Date getDueDate() {
		return dueDate;
	}
	public void setDueDate(Date dueDate) {
		this.dueDate = dueDate;
	}
	
	@Column(name = "unit_price")
	public BigDecimal getPrice() {
		return price;
	}
	public void setPrice(BigDecimal price) {
		this.price = price;
	}
	
	@Column(name = "format")
	public String getFormat() {
		return format;
	}
	public void setFormat(String format) {
		this.format = format;
	}
	
	@Column(name = "status")
	public String getStatus() {
		return status;
	}
	public void setStatus(String status) {
		this.status = status;
	}
	
	@Column(name = "checkout_date")
    @DateTimeFormat
	public Date getDateOfCheckout() {
		return dateOfCheckout;
	}
	public void setDateOfCheckout(Date dateOfCheckout) {
		this.dateOfCheckout = dateOfCheckout;
	}
	@Column(name = "publication_date")
    @DateTimeFormat
	public Date getPublicationDate() {
		return publicationDate;
	}
	public void setPublicationDate(Date publicationDate) {
		this.publicationDate = publicationDate;
	}
	
	@Column(name = "rack_num")
	public String getPlacedAt() {
		return placedAt;
	}
	public void setPlacedAt(String placedAt) {
		this.placedAt = placedAt;
	}
		
	@ManyToOne
    @JoinColumn(name = "id", nullable = false)
	public User getUser() {
		return user;
	}
	public void setUser(User user) {
		this.user = user;	
	}
	
	
	public String getRack() {
		return rack;
	}
	public void setRack(String rack) {
		this.rack = rack;
	}
	public boolean checkout(long userId) {
	    if(this.isReferenceOnly()) {
	      System.out.println("This book is Reference only and can't be issued");
	      return false;
	    }
	    if(!BookLending.lendBook(this.getBarcode(), userId)){
	      return false;
	    }
	    this.setStatus(BookStatus.LOANED.name());
	    return true;
	  }
	public void save() {
		// TODO 
		
	}

}
